{"version":3,"sources":["webpack:///./src/components/auth/auth.service.js","webpack:///./src/components/auth/user.service.js","webpack:///./src/content/account/account.js","webpack:///./src/content/account/login/login.controller.js","webpack:///./src/content/account/settings/settings.controller.js","webpack:///./src/content/account/signup/signup.controller.js"],"names":[],"mappings":"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","file":"2.app.js","sourcesContent":["import angular from 'angular';\nimport 'angular-cookies';\n\nimport './user.service';\n\nangular.module('pixelnukeApp')\n  .factory('Auth', function Auth($http, $location, $q, $rootScope, $cookieStore, User) {\n    let currentUser = {};\n\n    if ($cookieStore.get('token')) {\n      currentUser = User.get();\n    }\n\n    return {\n      login: (user, callback) => {\n        const cb = callback || angular.noop;\n        const deferred = $q.defer();\n\n        $http\n          .post('/auth/local', {\n            email: user.email,\n            password: user.password,\n          })\n\n          .success((data) => {\n            $cookieStore.put('token', data.token);\n            currentUser = User.get();\n            deferred.resolve(data);\n\n            return cb();\n          })\n\n          .error((err) => {\n            this.logout();\n            deferred.reject(err);\n\n            return cb(err);\n          }.bind(this));\n\n        return deferred.promise;\n      },\n\n      logout: () => {\n        $cookieStore.remove('token');\n        currentUser = {};\n      },\n\n      createUser: (user, callback) => {\n        const cb = callback || angular.noop;\n\n        return User.save(user,\n          (data) => {\n            $cookieStore.put('token', data.token);\n            currentUser = User.get();\n            return cb(user);\n          },\n\n          (err) => {\n            this.logout();\n            return cb(err);\n          }.bind(this)\n        ).$promise;\n      },\n\n      changePassword: (oldPassword, newPassword, callback) => {\n        const cb = callback || angular.noop;\n\n        return User.changePassword(\n          { id: currentUser._id },\n          { oldPassword: oldPassword, newPassword: newPassword },\n          (user) => {\n            return cb(user);\n          },\n\n          (err) => {\n            return cb(err);\n          }\n        ).$promise;\n      },\n\n      getCurrentUser: () => {\n        return currentUser;\n      },\n\n      isLoggedIn: () => {\n        return currentUser.hasOwnProperty('role');\n      },\n\n      isLoggedInAsync: (cb) => {\n        if (currentUser.hasOwnProperty('$promise')) {\n          currentUser\n            .$promise\n\n            .then(() => {\n              cb(true);\n            })\n\n            .catch(() => {\n              cb(false);\n            });\n        } else if (currentUser.hasOwnProperty('role')) {\n          cb(true);\n        } else {\n          cb(false);\n        }\n      },\n\n      isAdmin: () => {\n        return currentUser.role === 'admin';\n      },\n\n      getToken: () => {\n        return $cookieStore.get('token');\n      },\n    };\n  });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/auth/auth.service.js\n **/","import angular from 'angular';\nimport 'angular-resource';\n\nangular\n  .module('pixelnukeApp')\n  .factory('User', ($resource) => {\n    return $resource('/api/users/:id/:controller',\n      {\n        id: '@_id',\n      },\n      {\n        changePassword: {\n          method: 'PUT',\n          params: {\n            controller: 'password',\n          },\n        },\n        get: {\n          method: 'GET',\n          params: {\n            id: 'me',\n          },\n        },\n      }\n    );\n  });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/auth/user.service.js\n **/","import angular from 'angular';\n\nexport default angular\n  .module('account', [\n    require('./login/login.controller').name,\n    require('./settings/settings.controller').name,\n    require('./signup/signup.controller').name,\n  ]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/content/account/account.js\n **/","import angular from 'angular';\n\nimport '../../../components/auth/auth.service';\n\nangular\n  .module('pixelnukeApp')\n  .controller('LoginCtrl', ($location, $scope, Auth) => {\n    $scope.user = {};\n    $scope.errors = {};\n\n    $scope.login = (form) => {\n      $scope.submitted = true;\n\n      if (form.$valid) {\n        Auth\n          .login({\n            email: $scope.user.email,\n            password: $scope.user.password,\n          })\n\n          .then(() => {\n            $location.path('/');\n          })\n\n          .catch((err) => {\n            $scope.errors.other = err.message;\n          });\n      }\n    };\n  });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/content/account/login/login.controller.js\n **/","import angular from 'angular';\n\nimport '../../../components/auth/auth.service';\n\nangular\n  .module('pixelnukeApp')\n  .controller('SettingsCtrl', ($scope, Auth) => {\n    $scope.errors = {};\n\n    $scope.changePassword = (form) => {\n      $scope.submitted = true;\n\n      if (form.$valid) {\n        Auth\n          .changePassword($scope.user.oldPassword, $scope.user.newPassword)\n\n          .then(() => {\n            $scope.message = 'Password successfully changed.';\n          })\n\n          .catch(() => {\n            form.password.$setValidity('mongoose', false);\n            $scope.errors.other = 'Incorrect password';\n            $scope.message = '';\n          });\n      }\n    };\n  });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/content/account/settings/settings.controller.js\n **/","import angular from 'angular';\n\nimport '../../../components/auth/auth.service';\n\nangular.module('pixelnukeApp')\n  .controller('SignupCtrl', ($location, $scope, Auth) => {\n    $scope.user = {};\n    $scope.errors = {};\n\n    $scope.register = (form) => {\n      $scope.submitted = true;\n\n      if (form.$valid) {\n        Auth\n          .createUser({\n            name: $scope.user.name,\n            email: $scope.user.email,\n            password: $scope.user.password,\n          })\n\n          .then(() => {\n            $location.path('/');\n          })\n\n          .catch((err) => {\n            localError = err.data;\n\n            $scope.errors = {};\n\n            angular.forEach(localError.errors, (error, field) => {\n              form[field].$setValidity('mongoose', false);\n              $scope.errors[field] = error.message;\n            });\n          });\n      }\n    };\n  });\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/content/account/signup/signup.controller.js\n **/"],"sourceRoot":""}